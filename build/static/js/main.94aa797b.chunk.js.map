{"version":3,"sources":["components/chat.js","components/globalContext.js","components/chatLines.js","components/ChatInput.js","components/login.js","components/Navbar.js","App.js","index.js"],"names":["socket","GlobalContext","createContext","GlobalContextProvider","children","useCookies","cookies","useState","isLogin","userID","userName","currentUser","setCurrentUser","changeCurrentUserData","data","useEffect","loginData","username","password","a","axios","post","then","result","sendData","checkLogin","ContextData","Provider","value","ChatLines","linesData","useContext","className","author","start","end","id","same_author","time","message","ChatInput","sendMessageFunc","messageData","setMessageData","onSubmit","e","preventDefault","messageContent","htmlFor","type","placeholder","name","required","onChange","target","disabled","CONNECTION_PORT","Chat","io","transports","chatData","setChatData","messagesNumber","setMessagesNumber","scrollToBottom","document","querySelector","scrollIntoView","behavior","block","getMessages","number","newData","messages","array","length","i","messagesDataConfig","setTimeout","on","scrollTop","scrollHeight","offsetHeight","onClick","map","item","idx","emit","Login","setCookie","history","useHistory","push","setLoginData","getLoginInfo","goBack","Navbar","removeCookie","to","style","cursor","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94aa797b.chunk.js","sourcesContent":["import React, {Fragment, useContext, useEffect, useState} from 'react'\r\nimport ChatLines from './chatLines'\r\nimport { GlobalContext } from './globalContext'\r\nimport axios from 'axios'\r\nimport io from 'socket.io-client'\r\nimport ChatInput from './ChatInput'\r\n\r\nlet socket;\r\nconst CONNECTION_PORT = \"localhost:4000\"\r\n\r\nconst Chat = () => {\r\n    const { currentUser } = useContext(GlobalContext)\r\n\r\n    useEffect(() => {\r\n        socket = io(CONNECTION_PORT, {transports: ['websocket']})\r\n    }, [CONNECTION_PORT])\r\n\r\n    //messages data\r\n    const [chatData, setChatData] = useState([])\r\n\r\n    //Messages number\r\n    const [messagesNumber, setMessagesNumber] = useState(25)\r\n\r\n    //Scroll bottom function\r\n    const scrollToBottom = () => {\r\n        document.querySelector('.chat-messagne-list').scrollIntoView({behavior: \"smooth\", block: \"end\"});\r\n    }\r\n\r\n    //config messages data\r\n    const messagesDataConfig = array => {\r\n        if(array.length === 1){\r\n            array[0] = {\r\n                ...array[0],\r\n                start: true,\r\n                end: true\r\n            } \r\n        }else if(array.length > 1){\r\n            //first message config\r\n            array[0] = {\r\n                ...array[0],\r\n                start: true\r\n            } \r\n\r\n            //messages config\r\n            for(let i = 1; i < array.length-1; i++){\r\n                if (array[i].author == array[i-1].author) {\r\n                    array[i].same_author = true\r\n                }else{\r\n                    array[i].same_author = false\r\n                    array[i].start = true\r\n                }\r\n                array[i].author !== array[i+1].author\r\n                ? array[i].end = true\r\n                : array[i].end = false\r\n            }\r\n\r\n            //last message config\r\n            if(array[array.length-1].author == array[array.length-2].author){\r\n                array[array.length-1].same_author = true\r\n            }else{\r\n                array[array.length-1].same_author = false\r\n                array[array.length-1].start = true\r\n            }\r\n            array[array.length-1].end = true\r\n        }\r\n        return array\r\n    }\r\n\r\n    //get all messages function\r\n    const getMessages = number => {\r\n        axios.post(\"/api/get_message\", {\r\n            number\r\n        })\r\n        .then(result => {\r\n            const newData = result.data.messages\r\n            setChatData(messagesDataConfig(newData))\r\n        })\r\n    }\r\n\r\n    //view more message function\r\n    const viewMoreMessages = () => {\r\n        setMessagesNumber(messagesNumber + 5)\r\n        getMessages(messagesNumber + 5)\r\n    }\r\n\r\n    useEffect(() => {\r\n        //get all messagesa\r\n        getMessages(messagesNumber)\r\n        setTimeout(() => {\r\n            scrollToBottom()\r\n        }, 500)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"received_message\", () => {\r\n            getMessages(messagesNumber)\r\n            const a = document.querySelector('.chat-container').scrollTop\r\n            const b = document.querySelector('.chat-container').scrollHeight - document.querySelector('.chat-container').offsetHeight\r\n            const c = b - a\r\n            if(c < 100) {\r\n                scrollToBottom()\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const sendMessage = messageData => {\r\n        socket.emit(\"send_message\", messageData)\r\n        getMessages(messagesNumber)\r\n        scrollToBottom()\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Chatbox{`${currentUser.isLogin ? ` [${currentUser.userName}]` : ``}`}</h1>\r\n            <hr/>\r\n            <div id=\"wrapper\">\r\n              <div className=\"chat\">\r\n                <div className=\"chat-container\">\r\n                  <div className=\"chat-listcontainer\">\r\n                    <ul className=\"chat-messagne-list\">\r\n                    {chatData.length > 15 &&\r\n                    <center>\r\n                        <button onClick={viewMoreMessages} className=\"btn btn-primary\">Xem thêm</button>\r\n                    </center>\r\n                    }\r\n                     {!chatData\r\n                     ? \"Loading...\"\r\n                     :\r\n                     chatData.map((item, idx) => {\r\n                       return <ChatLines key={idx} linesData={item}/>\r\n                     })\r\n                     }\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ChatInput sendMessageFunc={sendMessage}/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import {createContext, useState, useEffect} from 'react'\r\nimport { useCookies } from 'react-cookie'\r\nimport axios from 'axios'\r\n\r\nexport const GlobalContext = createContext()\r\n\r\nconst GlobalContextProvider = ({children}) => {\r\n    const [cookies, setCookie] = useCookies(['name']); \r\n\r\n    //State\r\n    const [currentUser, setCurrentUser] = useState({\r\n        isLogin: false,\r\n        userID: null,\r\n        userName: null\r\n    })\r\n    \r\n    //Function\r\n    const changeCurrentUserData = data => {\r\n        setCurrentUser(data)\r\n    }\r\n\r\n    //check login function\r\n    const checkLogin = () => {\r\n        const loginData = {\r\n            username: cookies.username,\r\n            password: cookies.password\r\n        }\r\n        const sendData = async () => {\r\n            await axios.post(\"/api/login\", loginData)\r\n            .then(result => {\r\n                changeCurrentUserData(result.data)\r\n            })\r\n        }\r\n        sendData()\r\n    }\r\n\r\n    useEffect(()=> {\r\n        checkLogin()\r\n    })\r\n\r\n    //Data\r\n    const ContextData = {\r\n        currentUser,\r\n        changeCurrentUserData\r\n    }\r\n\r\n    //Provider\r\n    return (\r\n        <GlobalContext.Provider value={ContextData}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobalContextProvider","import React, {Fragment, useContext} from 'react'\r\nimport { GlobalContext } from './globalContext'\r\n\r\nconst ChatLines = ({linesData}) => {\r\n    const { currentUser } = useContext(GlobalContext)\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className={`chat-mess message-${linesData.author === currentUser.userName ? `right` : `left`} ${linesData.start ? `start` : ``}${linesData.end ? `end` : ``} `}>\r\n                <div className={`messageinner-ms-${linesData.id}`}>\r\n                    {!linesData.same_author && <span className=\"message-name\">{linesData.author}</span>}\r\n                    {linesData.author === currentUser.userName && <span className=\"message-time\">{linesData.time}</span>}\r\n                    <span className=\"message-text\">{linesData.message}</span>\r\n                    {linesData.author !== currentUser.userName && <span className=\"message-time\">{linesData.time}</span>}\r\n                </div>\r\n            </li> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatLines\r\n","import React, { Fragment, useContext, useState, useEffect } from 'react'\r\nimport { GlobalContext } from './globalContext'\r\n\r\nconst ChatInput = ({ sendMessageFunc }) => {\r\n    const { currentUser } = useContext(GlobalContext)\r\n\r\n    const [messageData, setMessageData] = useState({\r\n        message: \"\"\r\n    })\r\n\r\n    const onChangeHandle = e => {\r\n        setMessageData({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault()\r\n        if(messageData.message !== \"\"){\r\n             //data\r\n            const messageContent = {\r\n                ...messageData,\r\n                username: currentUser.userName\r\n            }\r\n            //send socket to api\r\n            sendMessageFunc(messageContent)\r\n        } \r\n       \r\n        //delete state\r\n        setMessageData({\r\n            message: \"\"\r\n        })\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={onSubmitHandle}>\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col\">\r\n                        <label className=\"col-form-label float-end\" htmlFor=\"chatMessage\" >Tin nhắn</label>\r\n                    </div>\r\n                    <div className=\"col-6 col-md-7\">\r\n                        {!currentUser.isLogin \r\n                        ? <input type=\"text\" className=\"form-control\" placeholder=\"Đăng nhập để chat\" disabled />\r\n                        : <input type=\"text\" id=\"chatMessage\" value={messageData.message} className=\"form-control\" placeholder=\"Nhập tin nhắn dô\" name=\"message\" required onChange={onChangeHandle}/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {currentUser.isLogin && \r\n                            <button className=\"btn btn-primary col float-start\">Gửi</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n","import React, {Fragment, useState, useContext} from 'react'\r\nimport { GlobalContext } from './globalContext'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router'\r\nimport { useCookies } from 'react-cookie'\r\n\r\nconst Login = () => {\r\n    const { currentUser, changeCurrentUserData } = useContext(GlobalContext)\r\n\r\n    const [cookies, setCookie] = useCookies(['name']); \r\n\r\n    const history = useHistory()\r\n\r\n    currentUser.isLogin && history.push(\"/\")\r\n\r\n    const [loginData, setLoginData] = useState()\r\n\r\n    const getLoginInfo = e => {\r\n        setLoginData({\r\n            ...loginData,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const loginSubmitHandle = e => {\r\n        e.preventDefault()\r\n        axios.post(\"/api/login\", loginData)\r\n        .then(result => {\r\n            changeCurrentUserData(result.data)\r\n            if(result.data.isLogin){\r\n                setCookie(\"username\", loginData.username)\r\n                setCookie(\"password\", loginData.password)\r\n                history.goBack()\r\n            } \r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Đăng nhập</h1>\r\n            <hr/>\r\n            <form onSubmit={loginSubmitHandle}>\r\n                <div className=\"container\">\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col\"></div>\r\n                        <div className=\"col-md-5 col-sm-auto\">\r\n                            <label htmlFor=\"username\" className=\"form-label\">Tài khoản</label>\r\n                            <input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Ék\" required onChange={getLoginInfo} />\r\n                        </div>\r\n                        <div className=\"col\"></div>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col\"></div>\r\n                        <div className=\"col-md-5 col-sm-auto\">\r\n                            <label htmlFor=\"password\" className=\"form-label\">Mật khẩu</label>\r\n                            <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Ư ư\" onChange={getLoginInfo} />\r\n                            <div className=\"invalid-feedback\">\r\n                            Tài khoản hoặc mật khẩu sai\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\"></div>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col\"></div>\r\n                        <div className=\"col-md-5 col-sm-12\">\r\n                            <button className=\"btn btn-primary float-end\" type=\"submit\">Đăng nhập</button>\r\n                        </div>\r\n                        <div className=\"col\"></div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, {Fragment, useContext} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { GlobalContext } from './globalContext'\r\nimport { useCookies } from 'react-cookie'\r\n\r\nconst Navbar = () => {\r\n    const { currentUser, changeCurrentUserData } = useContext(GlobalContext)\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies(['cookie-name']);\r\n\r\n    const logoutHandle = () => {\r\n        changeCurrentUserData({\r\n            isLogin: false\r\n        })\r\n        removeCookie(\"username\")\r\n        removeCookie(\"password\")\r\n    }\r\n\r\n    const style = {\r\n        cursor: \"pointer\"\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Chatbox</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n                        <div className=\"navbar-nav\">\r\n                            {!currentUser.isLogin \r\n                            ? \r\n                            <Fragment>\r\n                                <Link className=\"nav-link\" to=\"/login\">Đăng Nhập</Link>\r\n                                <Link className=\"nav-link\" to=\"/register\">Đăng ký</Link>\r\n                            </Fragment>\r\n                            : <a className=\"nav-link\" style={style} onClick={logoutHandle}>Thoát [{currentUser.userName}]</a>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { Fragment } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport Chat from './components/chat'\nimport GlobalContextProvider from './components/globalContext'\nimport Login from './components/login'\nimport Navbar from './components/Navbar'\n\nconst App = () => {\n  return (\n    <GlobalContextProvider>\n      <Fragment>\n        <Router>\n          <Navbar/>\n        <div className=\"container mt-5\">\n          <div className=\"row mt-5\">\n          <Switch>\n            <Route exact path=\"/\" component={Chat}/>\n            <Route exact path=\"/login\" component={Login}/>\n          </Switch>\n          </div>\n        </div>\n        </Router>\n      </Fragment>\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}